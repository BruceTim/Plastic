<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动扫描base包 ,将带有注解的类 纳入spring容器管理 -->
    <context:component-scan base-package="com.bruceTim" />

    <!-- 配置使Spring采用CGLIB代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:mail.properties</value>
                <value>classpath*:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!-- 引入所有properties配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>

    <!-- 引入所有properties配置文件
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="locations">
            <list>
                <value>classpath:mail.properties</value>
                <value>classpath*:jdbc.properties</value>
            </list>
        </property>
    </bean>-->

    <!-- 启动项目是初始化Company等数据 -->
    <bean id="companyInfoService" class="com.bruceTim.web.service.impl.CompanyInfoService"/>

    <bean id="mailSenderService" class="com.bruceTim.web.util.mail.EmailUtils" />
    <!-- 邮件发送器 163  -->
    <!--<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
            </props>
        </property>
    </bean> -->

    <!--  邮件发送器 gmail
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="port" value="25" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <prop key="mail.smtp.port">465</prop>
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
            </props>
        </property>
    </bean>-->

    <bean id="mailSender"
          class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="port" value="25" />
        <property name="session" ref="mailSession" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 邮件认证实现-->
    <bean id="smtpAuthenticator"
          class="com.bruceTim.web.util.mail.SmtpAuthenticator">
        <constructor-arg value="${mail.username}" ></constructor-arg>
        <constructor-arg value="${mail.password}" ></constructor-arg>
    </bean>

    <!-- 邮件 mailSession-->
    <bean id="mailSession" class="javax.mail.Session"
          factory-method="getInstance">
        <constructor-arg>
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <!--如果mail服务器是ssl认证，则去掉这里的注释符号
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">
                    javax.net.ssl.SSLSocketFactory
                </prop>
                <prop key="mail.smtp.socketFactory.fallback">
                    false
                </prop>-->
            </props>
        </constructor-arg>
        <constructor-arg ref="smtpAuthenticator" />
    </bean>

</beans>